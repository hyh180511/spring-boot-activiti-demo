<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.7.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.dapeng</groupId>
    <artifactId>springboot-activities-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>springboot-activities-demo</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <druid.version>1.1.9</druid.version>
        <activiti.version>6.0.0</activiti.version>
        <apache.xmlgraphics.version>1.7</apache.xmlgraphics.version>
        <!--        <snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>-->
        <!--        <asciidoctor.input.directory>${project.basedir}/docs/asciidoc</asciidoctor.input.directory>-->
        <!--        <generated.asciidoc.directory>${project.build.directory}/asciidoc</generated.asciidoc.directory>-->
        <!--        <asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>-->
        <!--        <asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency> <!-- 引入log4j2依赖 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-starter-thymeleaf</artifactId>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>

        <!-- activities配置 -->
        <!-- https://mvnrepository.com/artifact/org.activiti/activiti-spring-boot-starter-basic -->
        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-spring-boot-starter-basic</artifactId>
            <version>${activiti.version}</version>
        </dependency>

        <dependency><!--org.activiti.engine.ActivitiException: Found Activiti 5 process definition,
                    but no compatibility handler on the classpath-->
            <groupId>org.activiti</groupId>
            <artifactId>activiti5-engine</artifactId>
            <version>${activiti.version}</version>
        </dependency>
        <!--activiti-modeler依赖-->
        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-json-converter</artifactId>
            <version>${activiti.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.activiti</groupId>
                    <artifactId>activiti-bpmn-model</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-codec</artifactId>
            <version>${apache.xmlgraphics.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-css</artifactId>
            <version>${apache.xmlgraphics.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-svg-dom</artifactId>
            <version>${apache.xmlgraphics.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-svggen</artifactId>
            <version>${apache.xmlgraphics.version}</version>
        </dependency>
        <!-- activities 配置结束-->

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.48</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-starter-tomcat</artifactId>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional><!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖myboot项目的项目如果想要使用devtools，需要重新引入 -->
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.6.1</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.25</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>

        <!--        &lt;!&ndash;离线文档&ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <groupId>org.springframework.restdocs</groupId>-->
        <!--            <artifactId>spring-restdocs-mockmvc</artifactId>-->
        <!--            <version>1.1.2.RELEASE</version>-->
        <!--            <scope>test</scope>-->
        <!--        </dependency>-->

        <!--        &lt;!&ndash;生成静态文档&ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <groupId>io.springfox</groupId>-->
        <!--            <artifactId>springfox-staticdocs</artifactId>-->
        <!--            <version>2.6.1</version>-->
        <!--        </dependency>-->
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>
                        true
                    </fork>
                </configuration>
            </plugin>

            <!--            &lt;!&ndash;Maven通过Maven Surefire Plugin插件执行单元测试&ndash;&gt;-->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-surefire-plugin</artifactId>-->
            <!--            </plugin>-->

            <!--            &lt;!&ndash;通过Asciidoctor使得asciidoc生成其他的文档格式，例如：PDF 或者HTML5&ndash;&gt;-->
            <!--            <plugin>-->
            <!--                <groupId>org.asciidoctor</groupId>-->
            <!--                <artifactId>asciidoctor-maven-plugin</artifactId>-->
            <!--                <version>1.5.3</version>-->
            <!--                &lt;!&ndash;生成PDF&ndash;&gt;-->
            <!--                <dependencies>-->
            <!--                    <dependency>-->
            <!--                        <groupId>org.asciidoctor</groupId>-->
            <!--                        <artifactId>asciidoctorj-pdf</artifactId>-->
            <!--                        <version>1.5.0-alpha.14</version>-->
            <!--                    </dependency>-->
            <!--                    &lt;!&ndash; Comment this section to use the default jruby artifact provided by the plugin &ndash;&gt;-->
            <!--                    <dependency>-->
            <!--                        <groupId>org.jruby</groupId>-->
            <!--                        <artifactId>jruby-complete</artifactId>-->
            <!--                        <version>1.7.21</version>-->
            <!--                    </dependency>-->
            <!--                </dependencies>-->

            <!--                &lt;!&ndash;文档生成配置&ndash;&gt;-->
            <!--                <configuration>-->
            <!--                    <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>-->
            <!--                    <sourceDocumentName>index.adoc</sourceDocumentName>-->
            <!--                    <attributes>-->
            <!--                        <doctype>book</doctype>-->
            <!--                        <toc>left</toc>-->
            <!--                        <toclevels>3</toclevels>-->
            <!--                        <numbered></numbered>-->
            <!--                        <hardbreaks></hardbreaks>-->
            <!--                        <sectlinks></sectlinks>-->
            <!--                        <sectanchors></sectanchors>-->
            <!--                        <generated>${generated.asciidoc.directory}</generated>-->
            <!--                    </attributes>-->
            <!--                </configuration>-->
            <!--                &lt;!&ndash;因为每次执行只能处理一个后端，所以对于每个想要的输出类型，都是独立分开执行&ndash;&gt;-->
            <!--                <executions>-->
            <!--                    &lt;!&ndash;html5&ndash;&gt;-->
            <!--                    <execution>-->
            <!--                        <id>output-html</id>-->
            <!--                        <phase>test</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>process-asciidoc</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <backend>html5</backend>-->
            <!--                            <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                    &lt;!&ndash;pdf&ndash;&gt;-->
            <!--                    <execution>-->
            <!--                        <id>output-pdf</id>-->
            <!--                        <phase>test</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>process-asciidoc</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <backend>pdf</backend>-->
            <!--                            <outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
        </plugins>
    </build>

</project>
